https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences

https://github.com/p-ranav/tabulate

https://github.com/ikalnytskyi/termcolor

cd build && ctest to run all tests
cd build && ctest -R simple_test to run a specific test
cd build && ctest --output-on-failure to see the output of failed tests

NOTE: you have to use set_forced_width if you assign the output to a file.

///////////////////////////////////////////////////////////////////////
int border_top(std::string top) {
                if (top.size() != 1)
                    return 2;

                table.templates.top = top;
                return 1;
            } 

            int border_bottom(std::string bottom) {
                if (bottom.size() != 1)
                    return 2;

                table.templates.bottom = bottom;
                return 1;
            } 
            
            int border_left(std::string left) {
                if (left.size() != 1)
                    return 2;

                table.templates.left = left;
                return 1;
            }

            int border_right(std::string right) {
                if (right.size() != 1)
                    return 2;

                table.templates.right = right;
                return 1;
            }

            int top_left_corner(std::string corner) {
                if (corner.size() != 1)
                    return 2;

                table.templates.top_left_corner = corner;
                return 1;
            } 

            int top_right_corner(std::string corner) {
                if (corner.size() != 1)
                    return 2;

                table.templates.top_right_corner = corner;
                return 1;
            }
            
            int bottom_left_corner(std::string corner) {
                if (corner.size() != 1)
                    return 2;

                table.templates.bottom_left_corner = corner;
                return 1;
            } 

            int bottom_right_corner(std::string corner) {
                if (corner.size() != 1)
                    return 2;

                table.templates.bottom_right_corner = corner;
                return 1;
            }

            int corners(std::string corner) {
                if (corner.size() != 1)
                    return 2;

                top_left_corner(corner);
                top_right_corner(corner);

                bottom_left_corner(corner);
                bottom_right_corner(corner);
                return 1;
            }

            int horizontal_border(std::string horizontal) {
                if (horizontal.size() != 1)
                    return 2;

                border_top(horizontal);
                border_bottom(horizontal);
                return 1;
            }

            int vertical_border(std::string vertical) {
                if (vertical.size() != 1)
                    return 2;

                border_left(vertical);
                border_right(vertical);
                return 1;
            }
///////////////////////////////////////////////////////////////////////////////////////////